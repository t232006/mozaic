unit auxilaryClasses;

interface
uses windows, sysutils, graphics, FireDAC.Comp.Client;
type
TCell = class
    color: TColor;
    number: byte;
    amount: word;
    pressed: boolean;
    {Similair: TColor;
    SimName: string;}
    private
    FSimName: string;
    FConnection: TfdConnection;
    FTable: TfdQuery;
    function GetHex:string;
    function GetSim(RAL: boolean):TColor;
    public
    property HexColor:string read GetHex;
    property Similar:TColor read GetSim;
    property SimName: string read FSimName;
    constructor Create;
  end;
implementation


{ TCell }



constructor TCell.Create;
begin
    with fconnection do
    begin
      fconnection:=tfdconnection.Create(nil);
      DriverName:='SQLite';
      Params.Database:='ListOfColors.db';
      LoginPrompt:=false;
    end;
    ftable:=tfdquery.Create(nil);
    FTable.Connection:=FConnection ;
    //FTable.Active:=true;

end;

function TCell.GetHex: string;
begin
   result:= copy(IntToHex(colortorgb(rgb(getbvalue(color),getgvalue(color),getrvalue(color)))),3,6); //to swap r<->b for true hex representation
end;

function TCell.GetSim(RAL: boolean): TColor;
begin

end;

end.
