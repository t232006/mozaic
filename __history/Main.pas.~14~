unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, PaintGrid,
  Vcl.StdCtrls, colorsUnit, mediaClass;

type
  TForm1 = class(TForm)
    pg: TPaintGrid;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
  private
    { Private declarations }
  public
    //FcolorCont: TList<TColor>;
  end;

var
  Form1: TForm1;

implementation
uses initunit;
{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  pg.DrawFromMap;
end;

procedure TForm1.Button2Click(Sender: TObject);
var saver: TBitmap;
begin
  saver:=Tbitmap.Create(pg.width, pg.Height);
  saver.Canvas.CopyRect(rect(0,0,pg.Width,pg.Height),pg.Canvas,rect(0,0,pg.Width,pg.Height));
  saver.SaveToFile('picture.bmp');
end;

procedure TForm1.Button3Click(Sender: TObject);
var  r: TRect; s:string; cc: byte;
begin
    colorsform.show;
    with initForm.th do
    begin
      cc:=Colorconteiner.Count;
      ColorsForm.dg.rowCount:=7;
      for var k:=0 to cc-1 do
      begin
        Colorsform.dg.canvas.Brush.Color:=ColorConteiner[k];
        ColorsForm.dg.canvas.Rectangle(ColorsForm.dg.CellRect(k div 7,k mod 7));
        r:= ColorsForm.dg.CellRect(1,k) ;
        s:= IntToHex(ColorConteiner[k],1);
        ColorsForm.dg.canvas.TextRect(r,s,[]);
      end;
    end;


end;

procedure TForm1.Button4Click(Sender: TObject);
var mediana: TMediaSplit;
    map: TMap;
begin
    setlength(map, (pg.RowCount-1)*(pg.ColCount-1));
    for var i := 0 to pg.RowCount-1 do
      for var j := 0 to pg.ColCount-1 do
        map[i,j]:=pg.ColorMap[i,j];
    mediana:=TMediaSplit.create(map,2);

end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  initform.show;
end;

procedure TForm1.FormShow(Sender: TObject);
//var th:TengineTh;
begin
  //th:=TengineTh.create(FPicture,pg.ColCount,pg.RowCount,ColorCount);

  //TMap(pg.ColorMap):=GetMap();
  //pg.DrawFromMap;
end;

end.
